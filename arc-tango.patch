diff -r -u -x .svn arc/font.d /usr/include/d/arc/font.d
--- arc/font.d	2010-03-18 02:47:34.000000000 +0100
+++ /usr/include/d/arc/font.d	2010-03-18 01:45:51.000000000 +0100
@@ -59,7 +59,7 @@
 
 import
 	tango.text.convert.Integer,
-	tango.io.File,
+	tango.io.device.File,
 	tango.io.FilePath,
 	tango.math.Math,
 	tango.util.log.Log;
@@ -150,7 +150,7 @@
 		{
 			logger.info("Loading new font " ~ nameStr);
 
-			this.fontData = cast(ubyte[])(new File(fontPath)).read();		// we'll store the data in a buffer, because FreeType doesn't copy it.
+			this.fontData = cast(ubyte[])(new File(fontPath)).load();		// we'll store the data in a buffer, because FreeType doesn't copy it.
 
 			FT_Open_Args args;
 			args.memory_base = this.fontData.ptr;
diff -r -u -x .svn arc/math/routines.d /usr/include/d/arc/math/routines.d
--- arc/math/routines.d	2010-03-18 01:27:42.000000000 +0100
+++ /usr/include/d/arc/math/routines.d	2010-03-18 02:41:31.885351651 +0100
@@ -99,13 +99,7 @@
 	}
 	body
 	{
-		static if(Tango.Minor >= 998) 
-		{
-			return cast(int)(a + (Kiss.instance.toInt()  % (b+1-a) ));
-		} else 
-		{
-			return cast(int)(a + (Kiss.shared.toInt()  % (b+1-a) ));
-		}
+		return cast(int)(a + (Kiss.instance.toInt()  % (b+1-a) ));
 	}
 
 /// Finds the roots
diff -r -u -x .svn arc/sound.d /usr/include/d/arc/sound.d
--- arc/sound.d	2010-03-18 02:47:34.000000000 +0100
+++ /usr/include/d/arc/sound.d	2010-03-18 01:45:51.000000000 +0100
@@ -62,13 +62,16 @@
 import
 	tango.util.log.Log,
 	tango.io.FilePath,
-	tango.io.FileConduit,
-	tango.io.MappedBuffer,
+	tango.io.device.File,
+	tango.io.device.FileMap,
 	tango.stdc.stdio;
 
 import tango.stdc.stringz : toStringz;
 import tango.text.convert.Integer : toString;
 import tango.text.convert.Float : toString;
+
+import tango.util.Convert;
+
 
 /// logger for this module
 public Logger logger;
@@ -597,10 +600,10 @@
 			{
 				// Get first four bytes of sound file to determine type
 				// And then load the file.  sound_file will have all of our important info
-				auto fdata = new MappedBuffer(filename,FileConduit.ReadExisting); 
+				auto fdata = new MappedFile(filename,File.ReadExisting); 
 				
 				
-				char[] data = cast(char[])fdata.slice();
+				char[] data = cast(char[])fdata.map();
 				
 				delete fdata;
 				
@@ -783,7 +786,7 @@
 /// A Wave implementation of BaseSoundFile
 private class WaveFile : BaseSoundFile
 {
-	MappedBuffer mmbuffer;
+	MappedFile mmbuffer;
 	char[] file;
 
 	/// Open a wave file and store attributes from its headers
@@ -791,8 +794,8 @@
 	{	
 		logger.info("Loading WAV file " ~ filename); 
 		super(filename);
-		mmbuffer = new MappedBuffer(filename, FileConduit.ReadExisting); 
-		file = cast(char[])mmbuffer.slice();
+		mmbuffer = new MappedFile(filename, File.ReadExisting); 
+		file = cast(char[])mmbuffer.map();
 
 		// First 4 bytes of Wave file should be "RIFF"
 		if (file[0..4] != "RIFF")
@@ -841,8 +844,10 @@
 
 		// Open the file
 		file = fopen(toStringz(filename), toStringz("rb"));
-		if(ov_open(file, &vf, null, 0) < 0)
-			logger.fatal("'"~filename~"' is not an Ogg Vorbis file.\n");
+
+		auto err = ov_open(file, &vf, null, 0);
+		if(err < 0)
+			logger.fatal("'"~filename~"' is not an Ogg Vorbis file. Error code: \n"~to!(char[])(err)~".");
 		vorbis_info *vi = ov_info(&vf, -1);
 
 		// Get relevant data from the file
@@ -868,7 +873,7 @@
 		buffer.length = _size;
 		long ret = 0;
 		while (ret<_size)	// because it may take several requests to fill our buffer
-			ret += ov_read(&vf, cast(byte*)buffer[ret..length], _size-ret, 0, 2, 1, &current_section);
+			ret += ov_read(&vf, cast(byte*)buffer[ret..$].ptr, _size-ret, 0, 2, 1, &current_section);
 		return buffer;
 	}
     
